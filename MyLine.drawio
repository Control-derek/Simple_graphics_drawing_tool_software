<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Cloneable&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-273" y="9425" width="127" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;EventTarget&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ buildEventDispatchChain(EventDispatchChain): EventDispatchChain&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="245" y="-6777" width="467" height="79" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;annotation&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IDProperty&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ value(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-322" y="-6777" width="134" height="79" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Line&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Line(double, double, double, double): &lt;br/&gt;+ Line(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- endY: DoubleProperty&lt;br/&gt;- startY: DoubleProperty&lt;br/&gt;- shape: Line2D&lt;br/&gt;- startX: DoubleProperty&lt;br/&gt;- endX: DoubleProperty&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getStartX(): double&lt;br/&gt;- doCssGetStrokeInitialValue(): Paint&lt;br/&gt;+ setEndY(double): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ endYProperty(): DoubleProperty&lt;br/&gt;+ getEndX(): double&lt;br/&gt;- doComputeGeomBounds(BaseBounds, BaseTransform): BaseBounds&lt;br/&gt;+ startXProperty(): DoubleProperty&lt;br/&gt;- doConfigShape(): Line2D&lt;br/&gt;- doUpdatePeer(): void&lt;br/&gt;+ setEndX(double): void&lt;br/&gt;- doCssGetFillInitialValue(): Paint&lt;br/&gt;+ startYProperty(): DoubleProperty&lt;br/&gt;- doCreatePeer(): NGNode&lt;br/&gt;+ getStartY(): double&lt;br/&gt;+ endXProperty(): DoubleProperty&lt;br/&gt;+ setStartY(double): void&lt;br/&gt;+ getEndY(): double&lt;br/&gt;+ setStartX(double): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-126" y="9106" width="475" height="665" as="geometry" />
    </mxCell>
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MyLine&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MyLine(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- fromY: double&lt;br/&gt;- lastTranslateX: double&lt;br/&gt;- InitTool: String&lt;br/&gt;- fromX: double&lt;br/&gt;- lastTranslateY: double&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ paint(double, double, double, double): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ creator(String[]): MyLine&lt;br/&gt;+ clone(): Node&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-206" y="9821" width="315" height="281" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Node&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;# Node(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- subScene: SubScene&lt;br/&gt;- parentTreeVisibleChangedListener: InvalidationListener&lt;br/&gt;- FOCUS_WITHIN_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;- internalEventDispatcher: NodeEventDispatcher&lt;br/&gt;- DISABLED_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;- derivedDepthTest: boolean&lt;br/&gt;- properties: ObservableMap&amp;lt;Object, Object&amp;gt;&lt;br/&gt;- pickOnBounds: BooleanProperty&lt;br/&gt;- DEFAULT_TRANSLATE_Z: double&lt;br/&gt;- eventDispatcher: ObjectProperty&amp;lt;EventDispatcher&amp;gt;&lt;br/&gt;- DEFAULT_VIEW_ORDER: double&lt;br/&gt;- scene: ReadOnlyObjectWrapperManualFire&amp;lt;Scene&amp;gt;&lt;br/&gt;- EPSILON_ABSOLUTE: double&lt;br/&gt;- nodeTransformation: NodeTransformation&lt;br/&gt;- treeVisibleRO: TreeVisiblePropertyReadOnly&lt;br/&gt;- HOVER_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;- DEFAULT_CACHE: boolean&lt;br/&gt;- treeVisible: boolean&lt;br/&gt;- AUTOMATIC_ORIENTATION_RTL: byte&lt;br/&gt;- hover: ReadOnlyBooleanWrapper&lt;br/&gt;- parent: ReadOnlyObjectWrapper&amp;lt;Parent&amp;gt;&lt;br/&gt;- DEFAULT_DISABLE: boolean&lt;br/&gt;~ accessible: Accessible&lt;br/&gt;- layoutBounds: LazyBoundsProperty&lt;br/&gt;- boundsAccessor: BoundsAccessor&lt;br/&gt;- style: StringProperty&lt;br/&gt;- DEFAULT_ROTATE: double&lt;br/&gt;- DEFAULT_SCALE_Y: double&lt;br/&gt;- AUTOMATIC_ORIENTATION_MASK: byte&lt;br/&gt;- clipParent: Node&lt;br/&gt;- DEFAULT_ROTATION_AXIS: Point3D&lt;br/&gt;- DEFAULT_MOUSE_TRANSPARENT: boolean&lt;br/&gt;- nodeHelper: NodeHelper&lt;br/&gt;- peer: NGNode&lt;br/&gt;- txBoundsInvalid: boolean&lt;br/&gt;~ cssFlag: CssFlags&lt;br/&gt;- resolvedNodeOrientation: byte&lt;br/&gt;- localBoundsInvalid: boolean&lt;br/&gt;- EFFECTIVE_ORIENTATION_RTL: byte&lt;br/&gt;- layoutX: DoubleProperty&lt;br/&gt;- USER_DATA_KEY: Object&lt;br/&gt;- geomBounds: BaseBounds&lt;br/&gt;- DEFAULT_DEPTH_TEST: DepthTest&lt;br/&gt;- AUTOMATIC_ORIENTATION_LTR: byte&lt;br/&gt;- canReceiveFocus: boolean&lt;br/&gt;- pendingUpdateBounds: boolean&lt;br/&gt;~ focusVisible: FocusPropertyBase&lt;br/&gt;- managed: BooleanProperty&lt;br/&gt;- pressed: ReadOnlyBooleanWrapper&lt;br/&gt;- transformDirty: boolean&lt;br/&gt;- DEFAULT_SCALE_X: double&lt;br/&gt;- nodeOrientation: ObjectProperty&amp;lt;NodeOrientation&amp;gt;&lt;br/&gt;- localToParentTx: BaseTransform&lt;br/&gt;- localBounds: BaseBounds&lt;br/&gt;- disabled: ReadOnlyBooleanWrapper&lt;br/&gt;- focusWithin: FocusWithinProperty&lt;br/&gt;- SHOW_MNEMONICS_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;- DEFAULT_TRANSLATE_X: double&lt;br/&gt;- PRESSED_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;- showMnemonics: BooleanProperty&lt;br/&gt;- DEFAULT_SCALE_Z: double&lt;br/&gt;- geomBoundsInvalid: boolean&lt;br/&gt;- EFFECTIVE_ORIENTATION_MASK: byte&lt;br/&gt;- visible: BooleanProperty&lt;br/&gt;- layoutY: DoubleProperty&lt;br/&gt;- preprocessMouseEventDispatcher: EventDispatcher&lt;br/&gt;- eventHandlerProperties: EventHandlerProperties&lt;br/&gt;- FOCUSED_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;- unmodifiablePseudoClassStates: ObservableSet&amp;lt;PseudoClass&amp;gt;&lt;br/&gt;- _txBounds: BaseBounds&lt;br/&gt;- DEFAULT_TRANSLATE_Y: double&lt;br/&gt;- _geomBounds: BaseBounds&lt;br/&gt;- DEFAULT_CURSOR: Cursor&lt;br/&gt;- opacity: DoubleProperty&lt;br/&gt;- DEFAULT_CLIP: Node&lt;br/&gt;- txBounds: BaseBounds&lt;br/&gt;- focusTraversable: BooleanProperty&lt;br/&gt;- DEFAULT_EFFECT: Effect&lt;br/&gt;- focused: FocusPropertyBase&lt;br/&gt;+ BASELINE_OFFSET_SAME_AS_HEIGHT: double&lt;br/&gt;- labeledBy: Node&lt;br/&gt;- parentDisabledChangedListener: InvalidationListener&lt;br/&gt;- accessibleRole: ObjectProperty&amp;lt;AccessibleRole&amp;gt;&lt;br/&gt;- blendMode: ObjectProperty&amp;lt;BlendMode&amp;gt;&lt;br/&gt;- dirtyBits: Set&amp;lt;DirtyBits&amp;gt;&lt;br/&gt;~ pseudoClassStates: ObservableSet&amp;lt;PseudoClass&amp;gt;&lt;br/&gt;- FOCUS_VISIBLE_PSEUDOCLASS_STATE: PseudoClass&lt;br/&gt;~ styleHelper: CssStyleHelper&lt;br/&gt;~ accessibilityProperties: AccessibilityProperties&lt;br/&gt;- miscProperties: MiscProperties&lt;br/&gt;- EFFECTIVE_ORIENTATION_LTR: byte&lt;br/&gt;- styleClass: ObservableList&amp;lt;String&amp;gt;&lt;br/&gt;- id: StringProperty&lt;br/&gt;- DEFAULT_CACHE_HINT: CacheHint&lt;br/&gt;- DEFAULT_INPUT_METHOD_REQUESTS: InputMethodRequests&lt;br/&gt;- effectiveNodeOrientationProperty: EffectiveOrientationProperty&lt;br/&gt;~ boundsChanged: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- syncAll(Node): void&lt;br/&gt;+ scaleXProperty(): DoubleProperty&lt;br/&gt;- pressedPropertyImpl(): ReadOnlyBooleanWrapper&lt;br/&gt;+ addEventFilter(EventType&amp;lt;T&amp;gt;, EventHandler&amp;lt;T&amp;gt;): void&lt;br/&gt;+ setOnDragDone(EventHandler&amp;lt;DragEvent&amp;gt;): void&lt;br/&gt;+ getCacheHint(): CacheHint&lt;br/&gt;- getMiscProperties(): MiscProperties&lt;br/&gt;+ setScaleZ(double): void&lt;br/&gt;~ getPeer(): P&lt;br/&gt;- addToSceneDirtyList(): void&lt;br/&gt;+ parentToLocal(double, double): Point2D&lt;br/&gt;+ setOnDragDropped(EventHandler&amp;lt;DragEvent&amp;gt;): void&lt;br/&gt;+ disableProperty(): BooleanProperty&lt;br/&gt;+ setOnSwipeDown(EventHandler&amp;lt;SwipeEvent&amp;gt;): void&lt;br/&gt;# setFocused(boolean): void&lt;br/&gt;- calcEffectiveNodeOrientation(): byte&lt;br/&gt;+ getStyle(): String&lt;br/&gt;~ isDirty(DirtyBits): boolean&lt;br/&gt;+ getAccessibleRole(): AccessibleRole&lt;br/&gt;+ accessibleRoleDescriptionProperty(): ObjectProperty&amp;lt;String&amp;gt;&lt;br/&gt;~ isShowMnemonics(): boolean&lt;br/&gt;+ getOnContextMenuRequested(): EventHandler&amp;lt;ContextMenuEvent&amp;gt;&lt;br/&gt;- doLayoutPass(): void&lt;br/&gt;~ parentToLocal(Point2D): void&lt;br/&gt;+ setOnDragOver(EventHandler&amp;lt;DragEvent&amp;gt;): void&lt;br/&gt;+ localToParentTransformProperty(): ReadOnlyObjectProperty&amp;lt;Transform&amp;gt;&lt;br/&gt;~ getMatchingStyles(CssMetaData, Styleable?): List&amp;lt;Style&amp;gt;&lt;br/&gt;- reapplyCss(): void&lt;br/&gt;+ getAccessibleRoleDescription(): String&lt;br/&gt;+ setBlendMode(BlendMode): void&lt;br/&gt;+ minHeight(double): double&lt;br/&gt;- hasTransforms(): boolean&lt;br/&gt;# setPressed(boolean): void&lt;br/&gt;+ getScene(): Scene&lt;br/&gt;+ isFocusVisible(): boolean&lt;br/&gt;~ localBoundsChanged(): void&lt;br/&gt;~ getPivotZ(): double&lt;br/&gt;+ setOnContextMenuRequested(EventHandler&amp;lt;ContextMenuEvent&amp;gt;): void&lt;br/&gt;~ scenesChanged(Scene, SubScene, Scene, SubScene): void&lt;br/&gt;+ getStyleClass(): ObservableList&amp;lt;String&amp;gt;&lt;br/&gt;+ parentToLocal(Bounds): Bounds&lt;br/&gt;+ getEffect(): Effect&lt;br/&gt;+ localToScreen(Point3D): Point2D&lt;br/&gt;+ getOnTouchReleased(): EventHandler&amp;lt;TouchEvent&amp;gt;&lt;br/&gt;+ localToScene(Point2D, boolean): Point2D&lt;br/&gt;+ onTouchStationaryProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;TouchEvent&amp;gt;&amp;gt;&lt;br/&gt;~ almostZero(double): boolean&lt;br/&gt;+ setAccessibleRole(AccessibleRole?): void&lt;br/&gt;~ getPivotX(): double&lt;br/&gt;+ eventDispatcherProperty(): ObjectProperty&amp;lt;EventDispatcher&amp;gt;&lt;br/&gt;+ getOnRotationStarted(): EventHandler&amp;lt;RotateEvent&amp;gt;&lt;br/&gt;+ focusWithinProperty(): ReadOnlyBooleanProperty&lt;br/&gt;- invalidateBoundsInLocal(): void&lt;br/&gt;+ setTranslateY(double): void&lt;br/&gt;+ onTouchReleasedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;TouchEvent&amp;gt;&amp;gt;&lt;br/&gt;~ setTreeVisible(boolean): void&lt;br/&gt;~ findStyles(Map&amp;lt;StyleableProperty&amp;lt;?&amp;gt;, List&amp;lt;Style&amp;gt;&amp;gt;): Map&amp;lt;StyleableProperty&amp;lt;?&amp;gt;, List&amp;lt;Style&amp;gt;&amp;gt;&lt;br/&gt;~ processCSS(): void&lt;br/&gt;+ onMouseDragEnteredProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseDragEvent&amp;gt;&amp;gt;&lt;br/&gt;~ wouldCreateCycle(Node, Node): boolean&lt;br/&gt;+ setOnMouseMoved(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;- isDirtyEmpty(): boolean&lt;br/&gt;+ setOnMouseReleased(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;+ getOnMouseDragOver(): EventHandler&amp;lt;MouseDragEvent&amp;gt;&lt;br/&gt;+ intersects(double, double, double, double): boolean&lt;br/&gt;~ releaseAccessible(): void&lt;br/&gt;+ getTranslateY(): double&lt;br/&gt;+ cacheHintProperty(): ObjectProperty&amp;lt;CacheHint&amp;gt;&lt;br/&gt;+ getOnInputMethodTextChanged(): EventHandler&amp;lt;InputMethodEvent&amp;gt;&lt;br/&gt;~ recalculateRelativeSizeProperties(Font): void&lt;br/&gt;- doNotifyLayoutBoundsChanged(): void&lt;br/&gt;~ lookupAll(Selector, List&amp;lt;Node&amp;gt;): List&amp;lt;Node&amp;gt;&lt;br/&gt;~ getClipParent(): Node&lt;br/&gt;~ isConnected(): boolean&lt;br/&gt;+ onSwipeRightProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;SwipeEvent&amp;gt;&amp;gt;&lt;br/&gt;~ updateGeomBounds(): void&lt;br/&gt;+ isPressed(): boolean&lt;br/&gt;+ getOnMouseClicked(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ onMouseClickedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;# setHover(boolean): void&lt;br/&gt;~ traverse(Direction, TraversalMethod): boolean&lt;br/&gt;+ cursorProperty(): ObjectProperty&amp;lt;Cursor&amp;gt;&lt;br/&gt;+ setScaleY(double): void&lt;br/&gt;+ setOnTouchReleased(EventHandler&amp;lt;TouchEvent&amp;gt;): void&lt;br/&gt;+ setOnTouchPressed(EventHandler&amp;lt;TouchEvent&amp;gt;): void&lt;br/&gt;+ sceneToLocal(Point2D): Point2D&lt;br/&gt;~ transformedBoundsChanged(): void&lt;br/&gt;+ rotateProperty(): DoubleProperty&lt;br/&gt;+ getOnMouseReleased(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ lookupAll(String): Set&amp;lt;Node&amp;gt;&lt;br/&gt;~ boundedSize(double, double, double): double&lt;br/&gt;+ isMouseTransparent(): boolean&lt;br/&gt;+ onInputMethodTextChangedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;InputMethodEvent&amp;gt;&amp;gt;&lt;br/&gt;+ isFocusWithin(): boolean&lt;br/&gt;- doTransformsChanged(): void&lt;br/&gt;+ localToScene(double, double, double): Point3D&lt;br/&gt;- getInternalEventDispatcher(): NodeEventDispatcher&lt;br/&gt;+ translateXProperty(): DoubleProperty&lt;br/&gt;+ styleProperty(): StringProperty&lt;br/&gt;~ notifyFocusListeners(): void&lt;br/&gt;~ isTreeShowing(): boolean&lt;br/&gt;+ onDragOverProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;DragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ onMouseDraggedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;- transformsProperty(): ObservableList&amp;lt;Transform&amp;gt;&lt;br/&gt;+ setOnScrollFinished(EventHandler&amp;lt;ScrollEvent&amp;gt;): void&lt;br/&gt;# setEventHandler(EventType&amp;lt;T&amp;gt;, EventHandler&amp;lt;T&amp;gt;): void&lt;br/&gt;- parentPropertyImpl(): ReadOnlyObjectWrapper&amp;lt;Parent&amp;gt;&lt;br/&gt;+ onDragDoneProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;DragEvent&amp;gt;&amp;gt;&lt;br/&gt;~ notifyManagedChanged(): void&lt;br/&gt;+ computeAreaInScreen(): double&lt;br/&gt;+ getNodeOrientation(): NodeOrientation&lt;br/&gt;+ getOnZoomFinished(): EventHandler&amp;lt;ZoomEvent&amp;gt;&lt;br/&gt;+ onMousePressedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;- doComputeIntersects(PickRay, PickResultChooser?): boolean&lt;br/&gt;+ removeEventFilter(EventType&amp;lt;T&amp;gt;, EventHandler&amp;lt;T&amp;gt;): void&lt;br/&gt;+ setEventDispatcher(EventDispatcher): void&lt;br/&gt;+ cacheProperty(): BooleanProperty&lt;br/&gt;- getEventHandlerProperties(): EventHandlerProperties&lt;br/&gt;+ onScrollFinishedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ScrollEvent&amp;gt;&amp;gt;&lt;br/&gt;+ setRotationAxis(Point3D): void&lt;br/&gt;+ parentToLocal(Point2D): Point2D&lt;br/&gt;+ getOnScrollFinished(): EventHandler&amp;lt;ScrollEvent&amp;gt;&lt;br/&gt;- initializeInternalEventDispatcher(): void&lt;br/&gt;~ getLocalBounds(BaseBounds, BaseTransform): BaseBounds&lt;br/&gt;+ getPseudoClassStates(): ObservableSet&amp;lt;PseudoClass&amp;gt;&lt;br/&gt;~ localToParent(Vec3d): void&lt;br/&gt;+ getRotate(): double&lt;br/&gt;~ treeVisibleProperty(): BooleanExpression&lt;br/&gt;+ usesMirroring(): boolean&lt;br/&gt;+ setOnMousePressed(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;- requestFocusVisible(): void&lt;br/&gt;~ nodeResolvedOrientationInvalidated(): void&lt;br/&gt;+ onSwipeLeftProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;SwipeEvent&amp;gt;&amp;gt;&lt;br/&gt;+ effectProperty(): ObjectProperty&amp;lt;Effect&amp;gt;&lt;br/&gt;+ blendModeProperty(): ObjectProperty&amp;lt;BlendMode&amp;gt;&lt;br/&gt;+ onScrollStartedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ScrollEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getOnTouchPressed(): EventHandler&amp;lt;TouchEvent&amp;gt;&lt;br/&gt;+ focusTraversableProperty(): BooleanProperty&lt;br/&gt;+ getId(): String&lt;br/&gt;+ onRotateProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;RotateEvent&amp;gt;&amp;gt;&lt;br/&gt;~ computeDerivedDepthTest(): void&lt;br/&gt;+ localToScene(double, double): Point2D&lt;br/&gt;~ showMnemonicsProperty(): BooleanProperty&lt;br/&gt;+ isPickOnBounds(): boolean&lt;br/&gt;- updateLocalBounds(): void&lt;br/&gt;+ getTransforms(): ObservableList&amp;lt;Transform&amp;gt;&lt;br/&gt;+ fireEvent(Event): void&lt;br/&gt;+ localToScreen(double, double): Point2D&lt;br/&gt;- getMirroringOrientationParent(): Node&lt;br/&gt;+ sceneToLocal(Point2D, boolean): Point2D&lt;br/&gt;~ hasMirroring(): boolean&lt;br/&gt;- getAccessibilityProperties(): AccessibilityProperties&lt;br/&gt;- calcAutomaticNodeOrientation(): byte&lt;br/&gt;+ getOnDragExited(): EventHandler&amp;lt;DragEvent&amp;gt;&lt;br/&gt;- disabledPropertyImpl(): ReadOnlyBooleanWrapper&lt;br/&gt;+ getOnMouseDragged(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ executeAccessibleAction(AccessibleAction, Object[]): void&lt;br/&gt;~ setFocusQuietly(boolean, boolean): void&lt;br/&gt;+ opacityProperty(): DoubleProperty&lt;br/&gt;+ removeEventHandler(EventType&amp;lt;T&amp;gt;, EventHandler&amp;lt;T&amp;gt;): void&lt;br/&gt;+ boundsInLocalProperty(): ReadOnlyObjectProperty&amp;lt;Bounds&amp;gt;&lt;br/&gt;+ isDisable(): boolean&lt;br/&gt;+ getBoundsInLocal(): Bounds&lt;br/&gt;+ localToScene(Point3D, boolean): Point3D&lt;br/&gt;+ getOnScrollStarted(): EventHandler&amp;lt;ScrollEvent&amp;gt;&lt;br/&gt;+ getScaleY(): double&lt;br/&gt;+ setViewOrder(double): void&lt;br/&gt;+ localToScene(double, double, boolean): Point2D&lt;br/&gt;+ setDepthTest(DepthTest): void&lt;br/&gt;- doCSSPass(): void&lt;br/&gt;+ setManaged(boolean): void&lt;br/&gt;+ focusVisibleProperty(): ReadOnlyBooleanProperty&lt;br/&gt;- invalidatedScenes(Scene, SubScene): void&lt;br/&gt;+ setOnZoom(EventHandler&amp;lt;ZoomEvent&amp;gt;): void&lt;br/&gt;+ getOnDragDetected(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;- createInternalEventDispatcher(): NodeEventDispatcher&lt;br/&gt;+ setRotate(double): void&lt;br/&gt;+ getOpacity(): double&lt;br/&gt;+ setOpacity(double): void&lt;br/&gt;+ toBack(): void&lt;br/&gt;+ isFocused(): boolean&lt;br/&gt;+ getOnKeyTyped(): EventHandler&amp;lt;KeyEvent&amp;gt;&lt;br/&gt;+ getClassCssMetaData(): List&amp;lt;CssMetaData&amp;lt;Styleable, ?&amp;gt;&amp;gt;&lt;br/&gt;- doProcessCSS(): void&lt;br/&gt;+ layoutYProperty(): DoubleProperty&lt;br/&gt;+ getParent(): Parent&lt;br/&gt;~ pickNode(PickRay, PickResultChooser): void&lt;br/&gt;- preprocessMouseEvent(MouseEvent): void&lt;br/&gt;+ startFullDrag(): void&lt;br/&gt;~ isTreeVisible(): boolean&lt;br/&gt;- getEffectiveOrientation(byte): byte&lt;br/&gt;+ onDragEnteredProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;DragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getViewOrder(): double&lt;br/&gt;+ setOnKeyPressed(EventHandler&amp;lt;KeyEvent&amp;gt;): void&lt;br/&gt;+ getOnDragDone(): EventHandler&amp;lt;DragEvent&amp;gt;&lt;br/&gt;- clearParentsFocusWithin(Node?): void&lt;br/&gt;+ setOnKeyTyped(EventHandler&amp;lt;KeyEvent&amp;gt;): void&lt;br/&gt;~ markDirtyLayoutBranch(): void&lt;br/&gt;+ getTranslateZ(): double&lt;br/&gt;+ getBaselineOffset(): double&lt;br/&gt;+ sceneProperty(): ReadOnlyObjectProperty&amp;lt;Scene&amp;gt;&lt;br/&gt;~ syncPeer(): void&lt;br/&gt;+ onTouchMovedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;TouchEvent&amp;gt;&amp;gt;&lt;br/&gt;+ prefHeight(double): double&lt;br/&gt;- invalidateBoundsInParent(): void&lt;br/&gt;+ localToScene(Point2D): Point2D&lt;br/&gt;+ getLocalToSceneTransform(): Transform&lt;br/&gt;~ intersectsBounds(PickRay): double&lt;br/&gt;~ getCurrentLocalToSceneTransformState(): Transform&lt;br/&gt;- invalidateLocalToParentTransform(): void&lt;br/&gt;+ onScrollProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ScrollEvent&amp;gt;&amp;gt;&lt;br/&gt;+ onKeyPressedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;KeyEvent&amp;gt;&amp;gt;&lt;br/&gt;- doSnapshot(SnapshotParameters, WritableImage?): WritableImage&lt;br/&gt;+ setOnRotate(EventHandler&amp;lt;RotateEvent&amp;gt;): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ onContextMenuRequestedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ContextMenuEvent&amp;gt;&amp;gt;&lt;br/&gt;~ getGeomBounds(BaseBounds, BaseTransform): BaseBounds&lt;br/&gt;+ parentToLocal(double, double, double): Point3D&lt;br/&gt;+ onRotationFinishedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;RotateEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getOnSwipeDown(): EventHandler&amp;lt;SwipeEvent&amp;gt;&lt;br/&gt;+ setOnTouchMoved(EventHandler&amp;lt;TouchEvent&amp;gt;): void&lt;br/&gt;+ isFocusTraversable(): boolean&lt;br/&gt;+ setOnMouseDragged(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;~ layoutBoundsChanged(): void&lt;br/&gt;+ getOnTouchStationary(): EventHandler&amp;lt;TouchEvent&amp;gt;&lt;br/&gt;+ setId(String): void&lt;br/&gt;+ getOnSwipeUp(): EventHandler&amp;lt;SwipeEvent&amp;gt;&lt;br/&gt;- updateCanReceiveFocus(): void&lt;br/&gt;+ relocate(double, double): void&lt;br/&gt;+ accessibleHelpProperty(): ObjectProperty&amp;lt;String&amp;gt;&lt;br/&gt;+ isResizable(): boolean&lt;br/&gt;+ mouseTransparentProperty(): BooleanProperty&lt;br/&gt;~ updateLocalToParentTransform(): void&lt;br/&gt;+ getOnMouseEntered(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ onRotationStartedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;RotateEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getOnKeyReleased(): EventHandler&amp;lt;KeyEvent&amp;gt;&lt;br/&gt;+ getOnKeyPressed(): EventHandler&amp;lt;KeyEvent&amp;gt;&lt;br/&gt;+ localToScene(double, double, double, boolean): Point3D&lt;br/&gt;+ setOnDragExited(EventHandler&amp;lt;DragEvent&amp;gt;): void&lt;br/&gt;+ setOnSwipeLeft(EventHandler&amp;lt;SwipeEvent&amp;gt;): void&lt;br/&gt;~ setDerivedDepthTest(boolean): void&lt;br/&gt;- doCSSLayoutSyncForSnapshot(): void&lt;br/&gt;+ setOnMouseEntered(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;+ requestFocus(): void&lt;br/&gt;+ pseudoClassStateChanged(PseudoClass, boolean): void&lt;br/&gt;+ sceneToLocal(double, double): Point2D&lt;br/&gt;+ getBlendMode(): BlendMode&lt;br/&gt;+ addEventHandler(EventType&amp;lt;T&amp;gt;, EventHandler&amp;lt;T&amp;gt;): void&lt;br/&gt;+ startDragAndDrop(TransferMode[]): Dragboard&lt;br/&gt;+ onMouseDragExitedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseDragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ clipProperty(): ObjectProperty&amp;lt;Node&amp;gt;&lt;br/&gt;+ translateYProperty(): DoubleProperty&lt;br/&gt;+ localToParent(double, double): Point2D&lt;br/&gt;+ onZoomProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ZoomEvent&amp;gt;&amp;gt;&lt;br/&gt;+ resize(double, double): void&lt;br/&gt;+ isDisabled(): boolean&lt;br/&gt;+ sceneToLocal(Bounds): Bounds&lt;br/&gt;+ notifyAccessibleAttributeChanged(AccessibleAttribute): void&lt;br/&gt;- invalidateLocalToSceneTransform(): void&lt;br/&gt;+ onMouseReleasedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;+ setInputMethodRequests(InputMethodRequests): void&lt;br/&gt;+ getCursor(): Cursor&lt;br/&gt;+ setNodeOrientation(NodeOrientation): void&lt;br/&gt;+ onSwipeDownProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;SwipeEvent&amp;gt;&amp;gt;&lt;br/&gt;+ prefWidth(double): double&lt;br/&gt;~ notifyParentOfBoundsChange(): void&lt;br/&gt;~ getLocalToParentTransform(BaseTransform): BaseTransform&lt;br/&gt;+ getLayoutX(): double&lt;br/&gt;+ getTypeSelector(): String&lt;br/&gt;- updateDisabled(): void&lt;br/&gt;+ onZoomStartedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ZoomEvent&amp;gt;&amp;gt;&lt;br/&gt;+ visibleProperty(): BooleanProperty&lt;br/&gt;+ setOnMouseExited(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;# getInitialFocusTraversable(): Boolean&lt;br/&gt;+ onDragDroppedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;DragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ setStyle(String): void&lt;br/&gt;+ getOnTouchMoved(): EventHandler&amp;lt;TouchEvent&amp;gt;&lt;br/&gt;+ getAccessibleText(): String&lt;br/&gt;~ getStyleMap(): ObservableMap&amp;lt;StyleableProperty&amp;lt;?&amp;gt;, List&amp;lt;Style&amp;gt;&amp;gt;&lt;br/&gt;+ getOnMouseDragEntered(): EventHandler&amp;lt;MouseDragEvent&amp;gt;&lt;br/&gt;+ sceneToLocal(Bounds, boolean): Bounds&lt;br/&gt;+ setLayoutX(double): void&lt;br/&gt;+ isManaged(): boolean&lt;br/&gt;+ setUserData(Object): void&lt;br/&gt;+ setOnMouseDragOver(EventHandler&amp;lt;MouseDragEvent&amp;gt;): void&lt;br/&gt;+ getOnMouseMoved(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ pickOnBoundsProperty(): BooleanProperty&lt;br/&gt;+ snapshot(SnapshotParameters, WritableImage): WritableImage&lt;br/&gt;# setDisabled(boolean): void&lt;br/&gt;+ rotationAxisProperty(): ObjectProperty&amp;lt;Point3D&amp;gt;&lt;br/&gt;+ onTouchPressedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;TouchEvent&amp;gt;&amp;gt;&lt;br/&gt;+ layoutXProperty(): DoubleProperty&lt;br/&gt;~ getCSSFlags(): CssFlags&lt;br/&gt;~ localToParent(Point2D): void&lt;br/&gt;+ setTranslateZ(double): void&lt;br/&gt;+ getTranslateX(): double&lt;br/&gt;- containsBounds(double, double): boolean&lt;br/&gt;+ getOnDragDropped(): EventHandler&amp;lt;DragEvent&amp;gt;&lt;br/&gt;~ getTransformedBounds(BaseBounds, BaseTransform): BaseBounds&lt;br/&gt;+ scaleZProperty(): DoubleProperty&lt;br/&gt;+ onMouseMovedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getOnRotationFinished(): EventHandler&amp;lt;RotateEvent&amp;gt;&lt;br/&gt;+ maxWidth(double): double&lt;br/&gt;+ localToScreen(double, double, double): Point2D&lt;br/&gt;+ isCache(): boolean&lt;br/&gt;~ notifyParentsOfInvalidatedCSS(): void&lt;br/&gt;- doMarkDirty(DirtyBits): void&lt;br/&gt;+ getEffectiveNodeOrientation(): NodeOrientation&lt;br/&gt;+ setOnMouseDragReleased(EventHandler&amp;lt;MouseDragEvent&amp;gt;): void&lt;br/&gt;+ getLayoutY(): double&lt;br/&gt;- doUpdatePeer(): void&lt;br/&gt;+ intersects(Bounds): boolean&lt;br/&gt;- getNodeTransformation(): NodeTransformation&lt;br/&gt;~ sceneToLocal(Vec3d): void&lt;br/&gt;+ getOnMousePressed(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ onSwipeUpProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;SwipeEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getLayoutBounds(): Bounds&lt;br/&gt;+ sceneToLocal(double, double, double): Point3D&lt;br/&gt;+ onKeyReleasedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;KeyEvent&amp;gt;&amp;gt;&lt;br/&gt;+ focusedProperty(): ReadOnlyBooleanProperty&lt;br/&gt;~ localToScene(Vec3d): void&lt;br/&gt;+ lookup(String): Node&lt;br/&gt;+ setOnInputMethodTextChanged(EventHandler&amp;lt;InputMethodEvent&amp;gt;): void&lt;br/&gt;+ localToParent(Point2D): Point2D&lt;br/&gt;~ setShowMnemonics(boolean): void&lt;br/&gt;- requestCssStateTransition(): void&lt;br/&gt;+ isHover(): boolean&lt;br/&gt;+ getProperties(): ObservableMap&amp;lt;Object, Object&amp;gt;&lt;br/&gt;+ applyCss(): void&lt;br/&gt;+ onZoomFinishedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;ZoomEvent&amp;gt;&amp;gt;&lt;br/&gt;- doComputeLayoutBounds(): Bounds&lt;br/&gt;+ setOnSwipeUp(EventHandler&amp;lt;SwipeEvent&amp;gt;): void&lt;br/&gt;+ onKeyTypedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;KeyEvent&amp;gt;&amp;gt;&lt;br/&gt;- focusSetDirty(Scene?): void&lt;br/&gt;+ getOnScroll(): EventHandler&amp;lt;ScrollEvent&amp;gt;&lt;br/&gt;# getInitialCursor(): Cursor&lt;br/&gt;+ contains(double, double): boolean&lt;br/&gt;+ getContentBias(): Orientation&lt;br/&gt;+ hoverProperty(): ReadOnlyBooleanProperty&lt;br/&gt;+ pressedProperty(): ReadOnlyBooleanProperty&lt;br/&gt;+ onMouseExitedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;+ parentProperty(): ReadOnlyObjectProperty&amp;lt;Parent&amp;gt;&lt;br/&gt;+ resizeRelocate(double, double, double, double): void&lt;br/&gt;+ getOnDragEntered(): EventHandler&amp;lt;DragEvent&amp;gt;&lt;br/&gt;+ onDragExitedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;DragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getOnSwipeRight(): EventHandler&amp;lt;SwipeEvent&amp;gt;&lt;br/&gt;+ setAccessibleHelp(String): void&lt;br/&gt;+ getRotationAxis(): Point3D&lt;br/&gt;+ getOnZoom(): EventHandler&amp;lt;ZoomEvent&amp;gt;&lt;br/&gt;+ contains(Point2D): boolean&lt;br/&gt;~ localToScene(Point2D): void&lt;br/&gt;+ onMouseEnteredProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;+ localToScene(Bounds, boolean): Bounds&lt;br/&gt;- getOrientationParent(): Node&lt;br/&gt;+ getEventDispatcher(): EventDispatcher&lt;br/&gt;+ getOnMouseDragReleased(): EventHandler&amp;lt;MouseDragEvent&amp;gt;&lt;br/&gt;+ setOnScrollStarted(EventHandler&amp;lt;ScrollEvent&amp;gt;): void&lt;br/&gt;+ toFront(): void&lt;br/&gt;- doPickNodeLocal(PickRay, PickResultChooser): void&lt;br/&gt;- hoverPropertyImpl(): ReadOnlyBooleanWrapper&lt;br/&gt;+ snapshot(Callback&amp;lt;SnapshotResult, Void&amp;gt;, SnapshotParameters, WritableImage): void&lt;br/&gt;+ setOnKeyReleased(EventHandler&amp;lt;KeyEvent&amp;gt;): void&lt;br/&gt;+ setOnSwipeRight(EventHandler&amp;lt;SwipeEvent&amp;gt;): void&lt;br/&gt;~ setScenes(Scene, SubScene): void&lt;br/&gt;+ getOnDragOver(): EventHandler&amp;lt;DragEvent&amp;gt;&lt;br/&gt;+ managedProperty(): BooleanProperty&lt;br/&gt;- doComputeAreaInScreen(): double&lt;br/&gt;+ accessibleRoleProperty(): ObjectProperty&amp;lt;AccessibleRole&amp;gt;&lt;br/&gt;+ setFocusTraversable(boolean): void&lt;br/&gt;~ reapplyCSS(): void&lt;br/&gt;+ setDisable(boolean): void&lt;br/&gt;+ localToScreen(Point2D): Point2D&lt;br/&gt;+ setAccessibleText(String): void&lt;br/&gt;+ onMouseDragOverProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseDragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ getScaleZ(): double&lt;br/&gt;+ boundsInParentProperty(): ReadOnlyObjectProperty&amp;lt;Bounds&amp;gt;&lt;br/&gt;+ screenToLocal(Point2D): Point2D&lt;br/&gt;- getAutomaticOrientation(byte): byte&lt;br/&gt;+ nodeOrientationProperty(): ObjectProperty&amp;lt;NodeOrientation&amp;gt;&lt;br/&gt;+ getOnMouseExited(): EventHandler&amp;lt;MouseEvent&amp;gt;&lt;br/&gt;+ translateZProperty(): DoubleProperty&lt;br/&gt;~ getPivotY(): double&lt;br/&gt;+ getScaleX(): double&lt;br/&gt;+ queryAccessibleAttribute(AccessibleAttribute, Object[]): Object&lt;br/&gt;+ getStyleableParent(): Styleable&lt;br/&gt;+ setTranslateX(double): void&lt;br/&gt;+ depthTestProperty(): ObjectProperty&amp;lt;DepthTest&amp;gt;&lt;br/&gt;+ setLayoutY(double): void&lt;br/&gt;+ autosize(): void&lt;br/&gt;+ idProperty(): StringProperty&lt;br/&gt;+ setEffect(Effect): void&lt;br/&gt;+ setCache(boolean): void&lt;br/&gt;+ setOnMouseClicked(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;+ setPickOnBounds(boolean): void&lt;br/&gt;+ layoutBoundsProperty(): ReadOnlyObjectProperty&amp;lt;Bounds&amp;gt;&lt;br/&gt;+ getUserData(): Object&lt;br/&gt;+ localToScene(Point3D): Point3D&lt;br/&gt;+ getLocalToParentTransform(): Transform&lt;br/&gt;+ setOnRotationStarted(EventHandler&amp;lt;RotateEvent&amp;gt;): void&lt;br/&gt;~ updateBounds(): void&lt;br/&gt;+ buildEventDispatchChain(EventDispatchChain): EventDispatchChain&lt;br/&gt;~ updateTxBounds(): void&lt;br/&gt;~ intersects(PickRay, PickResultChooser): boolean&lt;br/&gt;+ getOnMouseDragExited(): EventHandler&amp;lt;MouseDragEvent&amp;gt;&lt;br/&gt;+ hasProperties(): boolean&lt;br/&gt;+ maxHeight(double): double&lt;br/&gt;+ localToParent(double, double, double): Point3D&lt;br/&gt;+ localToParent(Bounds): Bounds&lt;br/&gt;~ setParent(Parent): void&lt;br/&gt;+ setOnDragEntered(EventHandler&amp;lt;DragEvent&amp;gt;): void&lt;br/&gt;+ sceneToLocal(double, double, boolean): Point2D&lt;br/&gt;+ inputMethodRequestsProperty(): ObjectProperty&amp;lt;InputMethodRequests&amp;gt;&lt;br/&gt;- isWindowShowing(): boolean&lt;br/&gt;+ minWidth(double): double&lt;br/&gt;+ setOnScroll(EventHandler&amp;lt;ScrollEvent&amp;gt;): void&lt;br/&gt;+ effectiveNodeOrientationProperty(): ReadOnlyObjectProperty&amp;lt;NodeOrientation&amp;gt;&lt;br/&gt;~ nodeResolvedOrientationChanged(): void&lt;br/&gt;~ indent(): String&lt;br/&gt;- doGeomChanged(): void&lt;br/&gt;+ setOnZoomStarted(EventHandler&amp;lt;ZoomEvent&amp;gt;): void&lt;br/&gt;+ getAccessibleHelp(): String&lt;br/&gt;+ getClip(): Node&lt;br/&gt;+ setCacheHint(CacheHint): void&lt;br/&gt;+ disabledProperty(): ReadOnlyBooleanProperty&lt;br/&gt;+ setAccessibleRoleDescription(String): void&lt;br/&gt;+ getCssMetaData(): List&amp;lt;CssMetaData&amp;lt;Styleable, ?&amp;gt;&amp;gt;&lt;br/&gt;~ parentResolvedOrientationInvalidated(): void&lt;br/&gt;+ getBoundsInParent(): Bounds&lt;br/&gt;+ screenToLocal(Bounds): Bounds&lt;br/&gt;- clearDirty(): void&lt;br/&gt;+ setOnRotationFinished(EventHandler&amp;lt;RotateEvent&amp;gt;): void&lt;br/&gt;+ onDragDetectedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseEvent&amp;gt;&amp;gt;&lt;br/&gt;- setCanReceiveFocus(boolean): void&lt;br/&gt;+ setClip(Node): void&lt;br/&gt;+ setOnMouseDragExited(EventHandler&amp;lt;MouseDragEvent&amp;gt;): void&lt;br/&gt;+ getDepthTest(): DepthTest&lt;br/&gt;+ scaleYProperty(): DoubleProperty&lt;br/&gt;~ isCanReceiveFocus(): boolean&lt;br/&gt;+ parentToLocal(Point3D): Point3D&lt;br/&gt;~ sceneToLocal(Point2D): void&lt;br/&gt;+ setScaleX(double): void&lt;br/&gt;+ setOnZoomFinished(EventHandler&amp;lt;ZoomEvent&amp;gt;): void&lt;br/&gt;- sceneToLocal0(double, double, double): Point3D&lt;br/&gt;+ onMouseDragReleasedProperty(): ObjectProperty&amp;lt;EventHandler&amp;lt;MouseDragEvent&amp;gt;&amp;gt;&lt;br/&gt;+ screenToLocal(double, double): Point2D&lt;br/&gt;+ localToScene(Bounds): Bounds&lt;br/&gt;+ getOnRotate(): EventHandler&amp;lt;RotateEvent&amp;gt;&lt;br/&gt;+ localToScreen(Bounds): Bounds&lt;br/&gt;~ clearDirty(DirtyBits): void&lt;br/&gt;+ localToParent(Point3D): Point3D&lt;br/&gt;+ setOnDragDetected(EventHandler&amp;lt;MouseEvent&amp;gt;): void&lt;br/&gt;+ setOnTouchStationary(EventHandler&amp;lt;TouchEvent&amp;gt;): void&lt;br/&gt;~ parentToLocal(Vec3d): void&lt;br/&gt;+ viewOrderProperty(): DoubleProperty&lt;br/&gt;+ localToSceneTransformProperty(): ReadOnlyObjectProperty&amp;lt;Transform&amp;gt;&lt;br/&gt;+ setCursor(Cursor): void&lt;br/&gt;+ sceneToLocal(Point3D): Point3D&lt;br/&gt;+ setMouseTransparent(boolean): void&lt;br/&gt;- updateTreeVisible(boolean): void&lt;br/&gt;+ getInputMethodRequests(): InputMethodRequests&lt;br/&gt;+ setVisible(boolean): void&lt;br/&gt;~ isDerivedDepthTest(): boolean&lt;br/&gt;+ getOnSwipeLeft(): EventHandler&amp;lt;SwipeEvent&amp;gt;&lt;br/&gt;~ getSubScene(): SubScene&lt;br/&gt;+ accessibleTextProperty(): ObjectProperty&amp;lt;String&amp;gt;&lt;br/&gt;+ setOnMouseDragEntered(EventHandler&amp;lt;MouseDragEvent&amp;gt;): void&lt;br/&gt;+ isVisible(): boolean&lt;br/&gt;~ getLeafTransform(): BaseTransform&lt;br/&gt;~ getAccessible(): Accessible&lt;br/&gt;- computeLocalBounds(BaseBounds, BaseTransform): BaseBounds&lt;br/&gt;+ getOnZoomStarted(): EventHandler&amp;lt;ZoomEvent&amp;gt;&lt;br/&gt;~ setStyleMap(ObservableMap&amp;lt;StyleableProperty&amp;lt;?&amp;gt;, List&amp;lt;Style&amp;gt;&amp;gt;?): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-210" y="-6580" width="644" height="13721" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Shape&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Shape(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- MIN_STROKE_MITER_LIMIT: double&lt;br/&gt;- platformImageChangeListener: AbstractNotifyListener&lt;br/&gt;~ old_fill: Paint&lt;br/&gt;- strokeAttributesDirty: boolean&lt;br/&gt;- DEFAULT_STROKE_WIDTH: double&lt;br/&gt;- DEFAULT_STROKE_LINE_JOIN: StrokeLineJoin&lt;br/&gt;~ old_stroke: Paint&lt;br/&gt;- fill: ObjectProperty&amp;lt;Paint&amp;gt;&lt;br/&gt;- stroke: ObjectProperty&amp;lt;Paint&amp;gt;&lt;br/&gt;- shapeChangeListener: Reference&amp;lt;Runnable&amp;gt;&lt;br/&gt;- DEFAULT_PG_STROKE_DASH_ARRAY: float[]&lt;br/&gt;- mode: Mode&lt;br/&gt;- MIN_STROKE_WIDTH: double&lt;br/&gt;- smooth: BooleanProperty&lt;br/&gt;- DEFAULT_STROKE_LINE_CAP: StrokeLineCap&lt;br/&gt;- DEFAULT_STROKE_MITER_LIMIT: double&lt;br/&gt;- DEFAULT_STROKE_DASH_OFFSET: double&lt;br/&gt;- strokeAttributes: StrokeAttributes&lt;br/&gt;- DEFAULT_STROKE_TYPE: StrokeType&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ subtract(Shape, Shape): Shape&lt;br/&gt;+ setStrokeLineCap(StrokeLineCap): void&lt;br/&gt;- doCssGetStrokeInitialValue(): Paint&lt;br/&gt;~ computeShapeContains(double, double, Shape): boolean&lt;br/&gt;~ computeBounds(BaseBounds, BaseTransform, double, double, double, double, double, double): BaseBounds&lt;br/&gt;- doComputeContains(double, double): boolean&lt;br/&gt;+ getFill(): Paint&lt;br/&gt;+ getStrokeWidth(): double&lt;br/&gt;- hasStrokeDashArray(): boolean&lt;br/&gt;- createTransformedArea(Shape, BaseTransform): Area&lt;br/&gt;+ smoothProperty(): BooleanProperty&lt;br/&gt;+ setStrokeWidth(double): void&lt;br/&gt;+ union(Shape, Shape): Shape&lt;br/&gt;- doUpdatePeer(): void&lt;br/&gt;+ getStrokeDashArray(): ObservableList&amp;lt;Double&amp;gt;&lt;br/&gt;- doComputeGeomBounds(BaseBounds, BaseTransform): BaseBounds&lt;br/&gt;+ fillProperty(): ObjectProperty&amp;lt;Paint&amp;gt;&lt;br/&gt;+ strokeTypeProperty(): ObjectProperty&amp;lt;StrokeType&amp;gt;&lt;br/&gt;+ intersect(Shape, Shape): Shape&lt;br/&gt;~ setShapeChangeListener(Runnable): void&lt;br/&gt;+ getClassCssMetaData(): List&amp;lt;CssMetaData&amp;lt;Styleable, ?&amp;gt;&amp;gt;&lt;br/&gt;- checkModeChanged(): void&lt;br/&gt;- createFromGeomShape(Shape): Path&lt;br/&gt;+ setStrokeMiterLimit(double): void&lt;br/&gt;- updatePGShape(): void&lt;br/&gt;+ strokeLineJoinProperty(): ObjectProperty&amp;lt;StrokeLineJoin&amp;gt;&lt;br/&gt;- doMarkDirty(DirtyBits?): void&lt;br/&gt;~ computeShapeBounds(BaseBounds, BaseTransform, Shape): BaseBounds&lt;br/&gt;+ strokeLineCapProperty(): ObjectProperty&amp;lt;StrokeLineCap&amp;gt;&lt;br/&gt;+ strokeMiterLimitProperty(): DoubleProperty&lt;br/&gt;+ setSmooth(boolean): void&lt;br/&gt;+ setStrokeDashOffset(double): void&lt;br/&gt;- doCssGetFillInitialValue(): Paint&lt;br/&gt;- getStrokeAttributes(): StrokeAttributes&lt;br/&gt;+ setStrokeLineJoin(StrokeLineJoin): void&lt;br/&gt;~ convertLineJoin(StrokeLineJoin): StrokeLineJoin&lt;br/&gt;+ getStrokeLineCap(): StrokeLineCap&lt;br/&gt;+ setStroke(Paint): void&lt;br/&gt;- getTransformedArea(): Area&lt;br/&gt;+ strokeDashOffsetProperty(): DoubleProperty&lt;br/&gt;+ isSmooth(): boolean&lt;br/&gt;+ strokeWidthProperty(): DoubleProperty&lt;br/&gt;+ getStrokeType(): StrokeType&lt;br/&gt;+ getStrokeDashOffset(): double&lt;br/&gt;+ getStrokeMiterLimit(): double&lt;br/&gt;- getTransformedArea(BaseTransform): Area&lt;br/&gt;- computeMode(): Mode&lt;br/&gt;+ strokeProperty(): ObjectProperty&amp;lt;Paint&amp;gt;&lt;br/&gt;+ getStroke(): Paint&lt;br/&gt;- toPGDashArray(List&amp;lt;Double&amp;gt;): float[]&lt;br/&gt;+ setStrokeType(StrokeType): void&lt;br/&gt;+ getCssMetaData(): List&amp;lt;CssMetaData&amp;lt;Styleable, ?&amp;gt;&amp;gt;&lt;br/&gt;- calculateNodeToSceneTransform(Node): BaseTransform&lt;br/&gt;+ setFill(Paint): void&lt;br/&gt;~ getMode(): Mode&lt;br/&gt;+ getStrokeLineJoin(): StrokeLineJoin&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-141" y="7191" width="506" height="1865" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Styleable&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getTypeSelector(): String&lt;br/&gt;+ getStyleClass(): ObservableList&amp;lt;String&amp;gt;&lt;br/&gt;+ getStyle(): String&lt;br/&gt;+ getStyleableParent(): Styleable&lt;br/&gt;+ getStyleableNode(): Node&lt;br/&gt;+ getCssMetaData(): List&amp;lt;CssMetaData&amp;lt;Styleable, ?&amp;gt;&amp;gt;&lt;br/&gt;+ getPseudoClassStates(): ObservableSet&amp;lt;PseudoClass&amp;gt;&lt;br/&gt;+ getId(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-168" y="-6861" width="393" height="231" as="geometry" />
    </mxCell>
    <mxCell id="edge5" edge="1" value="" parent="1" source="node0" target="node6" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node7" target="node5" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.250;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.001;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="-127" y="9796" />
          <mxPoint x="-209" y="9796" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge6" edge="1" value="" parent="1" source="node7" target="node0" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.750;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="30" y="9796" />
          <mxPoint x="112" y="9796" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge3" edge="1" value="" parent="1" source="node3" target="node4" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.750;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="273" y="-6600" />
          <mxPoint x="254" y="-6600" />
          <mxPoint x="254" y="-6610" />
          <mxPoint x="479" y="-6610" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node3" target="node1" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;dashPattern=1 1;startArrow=none;endArrow=none;strokeColor=#999900;exitX=0.250;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="-49" y="-6600" />
          <mxPoint x="-255" y="-6600" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge4" edge="1" value="" parent="1" source="node3" target="node2" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.750;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="273" y="-6600" />
          <mxPoint x="254" y="-6600" />
          <mxPoint x="254" y="-6610" />
          <mxPoint x="29" y="-6610" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge2" edge="1" value="" parent="1" source="node6" target="node3" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>